@use 'variables';

.header {
  flex: none;
  height: auto;
  position: fixed;
  left: variables.$size-border;
  right: variables.$size-border;
  top: variables.$size-border;
  z-index: 8;
  width: min-content;

  .header-side {
    background-color: variables.$color-background-primary;
    padding: 0.125rem 0.875rem 0.625rem;
    border-bottom-right-radius: 1rem;
    flex: none;
    height: min-content;
    overflow: visible;
    position: relative;
    width: min-content;

    @media #{variables.$media-md} {
      padding: 0.25rem 1rem 0.75rem;
      border-bottom-right-radius: 1.25rem;
    }

    .logo-container {
      align-items: center;
      cursor: pointer;
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      gap: 0.25rem;
      height: min-content;
      justify-content: flex-start;
      overflow: visible;
      padding: 0;
      text-decoration: none;
      width: min-content;

      @media #{variables.$media-md} {
        gap: 0.375rem;
      }

      .logo-image-container {
        flex: none;
        width: 0.875rem;
        height: 0.875rem;

        @media #{variables.$media-md} {
          width: 0.9375rem;
          height: 0.9375rem;
        }

        .logo {
          width: 100%;
          height: 100%;
          object-fit: contain;
        }
      }

      .logo-text-container {
        outline: none;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        flex-shrink: 0;
        transform: none;
        flex: none;
        height: auto;
        white-space: pre;
        width: auto;

        .logo-text {
          font-weight: 500;
          color: variables.$color-background-tertiary;
          font-size: 0.875rem;
          margin: 0;

          @media #{variables.$media-md} {
            font-size: 0.9375rem;
          }
        }
      }
    }
  }
}

.border-detail {
  aspect-ratio: 1 / 1;
  flex: none;
  height: 12px;
  overflow: hidden;
  pointer-events: none;
  position: fixed;
  width: 12px;
  z-index: 9;

  &.top-left {
    transform: rotate(90deg);
    right: variables.$size-border;
    top: variables.$size-border;
  }

  &.bottom-left {
    transform: rotate(270deg);
    bottom: variables.$size-border;
    left: variables.$size-border;
  }

  &.bottom-right {
    transform: rotate(180deg);
    bottom: variables.$size-border;
    right: variables.$size-border;
  }
}

.border {
  position: fixed;
  z-index: 8;
  left: 0;
  top: 0;
  width: 100%;
  height: 100dvh;
  pointer-events: none;
  border: variables.$size-border solid variables.$color-background-primary;
}